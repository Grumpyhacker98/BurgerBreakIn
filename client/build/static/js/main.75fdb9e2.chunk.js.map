{"version":3,"sources":["BurgerTable.js","IngredientTable.js","router/API.js","App.js","index.js"],"names":["BurgerTable","props","className","scope","table","map","item","key","id","name","type","onClick","viewModals","deleteItem","colSpan","IngredientTable","calories","carbs","fats","protein","API","tableName","Promise","resolve","reject","console","log","axiosString","axios","get","catch","err","then","data","restoreSQL","post","delete","update","create","nutrition","App","state","burgers","ingredients","objectValues","ViewNutrition","EditBurger","CreateBurger","EditIngredient","CreateIngredient","searchMYSQL","bind","restoreData","restoreSQLseeds","editItem","createItem","this","burger","ingredient","setState","newData","modal","i","list","length","push","test","renderTable","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75fdb9e2.chunk.js","sourcesContent":["import React from 'react';\n\nfunction BurgerTable(props) {\n    return (\n        <div>\n            <table className=\"table table-dark\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Nutrition</th>\n                        <th scope=\"col\">Edit</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.table.map((item) =>\n                        <tr key={item.id}>\n                            <th scope=\"row\">{item.id}</th>\n                            <td><span className=\"flex-grow-1\">{item.name}</span></td>\n                            <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => props.viewModals(\"Nutrition\", item.id)} >View</button></td>\n                            <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => props.viewModals(\"EditBurger\", item)}>Edit</button></td>\n                            <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => props.deleteItem(\"burger\", item.id)}>X</button></td>\n                        </tr>\n                    )}\n                    <tr>\n                        <th scope=\"row\" colSpan=\"9\">\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => props.viewModals(\"CreateBurger\", null)}>Create New Burger</button>\n                        </th>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default BurgerTable","import React from 'react';\n\nfunction IngredientTable(props) {\n\n\n    return (\n        <div>\n            <table className=\"table table-dark\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Calories</th>\n                        <th scope=\"col\">Carbs</th>\n                        <th scope=\"col\">Fats</th>\n                        <th scope=\"col\">Protein</th>\n                        <th scope=\"col\">Edit</th>\n                        <th scope=\"col\">Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.table.map((item) =>\n                        <tr key={item.id}>\n                            <th scope=\"row\">{item.id}</th>\n                            <td><span>{item.name}</span></td>\n                            <td><span>{item.calories}</span></td>\n                            <td><span>{item.carbs}</span></td>\n                            <td><span>{item.fats}</span></td>\n                            <td><span>{item.protein}</span></td>\n                            <td><button type=\"button\" className=\"btn btn-primary\" onClick={() => props.viewModals(\"EditIngredient\", item)}>Edit</button></td>\n                            <td><button type=\"button\" className=\"btn btn-danger\" onClick={() => props.deleteItem(\"ingredients\", item.id)}>X</button></td>\n                        </tr>\n                    )}\n                    <tr>\n                        <th scope=\"row\" colSpan=\"9\">\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => props.viewModals(\"CreateIngredient\", null)}> Create New Ingredient</button>\n                        </th>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default IngredientTable","import axios from 'axios';\n\n// might need to fix cross origin reference bug\n// const config = {\n//     headers: {\n//         \"Access-Control-Allow-Origin\": \"*\",\n//         \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\n//     }\n// };\n\nconst API = {\n\n    table: (tableName) => {\n        return new Promise((resolve, reject) => {\n            console.log(\"searching\")\n            // let axiosString = \"http://localhost:3001/api/all/\" + tableName\n            let axiosString = \"https://burger-break-down.herokuapp.com/api/all/\" + tableName\n            axios.get(axiosString)\n                .catch((err) => reject(err))\n                .then((data) => resolve(data))\n        })\n    },\n\n    restoreSQL: () => {\n        return new Promise((resolve, reject) => {\n            let axiosString = \"/api/restore/\"\n            axios.post(axiosString)\n                .catch((err) => reject(err))\n                .then((data) => resolve(data))\n        })\n    },\n\n    delete: (table, id) => {\n        return new Promise((resolve, reject) => {\n            let axiosString = \"/api/\" + table + \"/\" + id\n            axios.delete(axiosString)\n                .catch((err) => reject(err))\n                .then((data) => resolve(data))\n        })\n    },\n\n    update: (data) => {\n        return new Promise((resolve, reject) => {\n            let axiosString = \"/api/update\"\n            axios.post(axiosString, data)\n                .catch((err) => reject(err))\n                .then((data) => resolve(data))\n\n        })\n    },\n\n    create: (data) => {\n        return new Promise((resolve, reject) => {\n            let axiosString = \"/api/create\"\n            axios.post(axiosString, data)\n                .catch((err) => reject(err))\n                .then((data) => resolve(data))\n        })\n    },\n\n    nutrition: (id) => {\n        return new Promise((resolve, reject) => {\n            let axiosString = \"/api/nutrition/\" + id\n            axios.get(axiosString)\n                .catch((err) => reject(err))\n                .then((data) => resolve(data))\n        })\n    }\n}\n\nexport default API;","import React, { Component } from 'react';\nimport './App.css';\n\nimport BurgerTable from './BurgerTable';\nimport IngredientTable from './IngredientTable';\n\n// import ViewBurgerModal from './ViewBurgerModal';\n// import EditBurgerModal from './EditBurgerModal';\n// import CreateBurgerModal from './CreateBurgerModal';\n// import EditIngredientModal from './EditIngredientsModal';\n// import CreateIngredientModal from './CreateIngredientModal';\n\nimport API from './router/API';\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.searchMYSQL = this.searchMYSQL.bind(this)\n    this.restoreData = this.restoreData.bind(this)\n    this.restoreSQLseeds = this.restoreSQLseeds.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.editItem = this.editItem.bind(this)\n    this.createItem = this.createItem.bind(this)\n    this.viewModals = this.viewModals.bind(this)\n  }\n\n  state = {\n    table: 'burger',\n    burgers: [],\n    ingredients: [],\n    objectValues: {},\n    ViewNutrition: false,\n    EditBurger: false,\n    CreateBurger: false,\n    EditIngredient: false,\n    CreateIngredient: false\n  }\n\n  componentDidMount() {\n    this.searchMYSQL()\n  };\n\n  async searchMYSQL() {\n    let burger = await API.table(\"burger\")\n    let ingredient = await API.table(\"ingredients\")\n    this.setState({\n      burgers: burger.data,\n      ingredients: ingredient.data,\n    })\n  }\n\n  // fix seeds\n  async restoreSQLseeds() {\n    let newData = await API.restoreSQL()\n    console.log(newData)\n    this.setState({ burgers: newData.data[0], ingredients: newData.data[1] })\n  }\n\n  restoreData(table, newData) {\n    if (table === \"burger\") {\n      this.setState({ burgers: newData.data })\n    } else {\n      this.setState({ ingredients: newData.data })\n    }\n  }\n\n  async deleteItem(table, id) {\n    let newData = await API.delete(table, id)\n    this.restoreData(table, newData)\n  }\n\n  async editItem(data) {\n    let newData = await API.update(data)\n    this.restoreData(data.table, newData)\n  }\n\n  async createItem(data) {\n    var newData = await API.create(data)\n    this.restoreData(data.table, newData)\n  }\n\n  async nutritionValue(id) {\n    // console.log(id)\n    // let data = await API.nutrition(id)\n    // console.log(data)\n    this.setState({ ViewNutrition: true, objectValues: id })\n  }\n\n  viewModals(modal, props) {\n    switch (modal) {\n      case \"Nutrition\":\n        this.setState({ ViewNutrition: true, objectValues: props })\n        break;\n      case \"CreateBurger\":\n        this.setState({ CreateBurger: true })\n        break;\n      case \"EditBurger\":\n        this.setState({ EditBurger: true, objectValues: props })\n        break;\n      case \"CreateIngredient\":\n        this.setState({ CreateIngredient: true })\n        break;\n      case \"EditIngredient\":\n        this.setState({ EditIngredient: true, objectValues: props })\n        break;\n      default:\n    }\n  }\n\n  // spawn burger table, or filter ingredients list for specific type\n  renderTable(table) {\n    if (table === \"burger\") {\n      return <BurgerTable\n        table={this.state.burgers}\n        deleteItem={this.deleteItem}\n        editItem={this.editItem}\n        viewModals={this.viewModals}\n      />\n    } else {\n      let i = 0\n      let list = []\n      for (i = 0; i < this.state.ingredients.length; i++) {\n        if (table === this.state.ingredients[i].type) {\n          list.push(this.state.ingredients[i])\n        }\n      }\n      return <IngredientTable\n        table={list}\n        deleteItem={this.deleteItem}\n        viewModals={this.viewModals}\n      />;\n    }\n  }\n\n  async test() {\n    // let chars = ['A', 'B', 'A', 'C', 'B'];\n    // let uniqueChars = [...new Set(chars)];\n\n    // console.log(uniqueChars);\n    let test = await API.table(\"burger\")\n\n    console.log(test)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n\n          <button onClick={() => this.restoreSQLseeds()}>Restore SQL Seeds</button>\n          <button onClick={() => this.test()}>Test Log</button>\n\n          <div className=\"d-flex justify-content-around p-2\">\n            <button onClick={() => this.setState({ table: 'burger' })} >Burger</button>\n            <button onClick={() => this.setState({ table: 'Meat' })} >Meat</button>\n            <button onClick={() => this.setState({ table: 'Cheese' })} >Cheese</button>\n            <button onClick={() => this.setState({ table: 'Bun' })} >Bun</button>\n            <button onClick={() => this.setState({ table: 'Vegetable' })} >Vegetable</button>\n            <button onClick={() => this.setState({ table: 'Condiment' })} >Condiments</button>\n          </div>\n\n          {/* the tables themselves */}\n          {this.renderTable(this.state.table)}\n\n          {/* each individual model */}\n          {/* <ViewBurgerModal\n            viewNutrition={this.nutritionValue}\n            current={this.state.objectValues}\n            burger={this.state.burgers}\n            ingredients={this.state.ingredients}\n            show={this.state.ViewNutrition}\n            onHide={() => this.setState({ ViewNutrition: false })}\n          />\n\n          <EditBurgerModal\n            editItem={this.editItem}\n            burger={this.state.objectValues}\n            ingredients={this.state.ingredients}\n            show={this.state.EditBurger}\n            onHide={() => this.setState({ EditBurger: false })}\n          />\n\n          <CreateBurgerModal\n            createItem={this.createItem}\n            ingredients={this.state.ingredients}\n            show={this.state.CreateBurger}\n            onHide={() => this.setState({ CreateBurger: false })}\n          />\n\n          <EditIngredientModal\n            editItem={this.editItem}\n            data={this.state.objectValues}\n            show={this.state.EditIngredient}\n            onHide={() => this.setState({ EditIngredient: false })}\n          />\n\n          <CreateIngredientModal\n            createItem={this.createItem}\n            type={this.state.table}\n            show={this.state.CreateIngredient}\n            onHide={() => this.setState({ CreateIngredient: false })}\n          /> */}\n\n        </header>\n      </div >\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}